pipeline {

    options {
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    }

    agent any

    tools {
        maven 'mvn_3.8.7'
    }

    stages {
        stage('Code Compilation') {
            steps {
                echo 'code compilation is starting'
                sh 'mvn clean compile'
				echo 'code compilation is completed'
            }
        }
        stage('Sonarqube Code Quality') {
                            environment {
                                scannerHome = tool 'qube'
                            }
                            steps {
                                withSonarQubeEnv('sonar-server') {
                                    sh "${scannerHome}/bin/sonar-scanner"
                                    sh 'mvn sonar:sonar'
                                }
                            }
                }
        stage('Code Package') {
            steps {
                echo 'code packing is starting'
                sh 'mvn clean package'
				echo 'code packing is completed'
            }
        }
        stage('Building & Tag Docker Image') {
            steps {
                echo 'Starting Building Docker Image'
                sh 'docker build -t navjyotb/yatra-ms .'
                sh 'docker build -t yatra-ms .'
                echo 'Completed  Building Docker Image'
            }
        }
        stage('Docker Image Scanning') {
            steps {
                echo 'Docker Image Scanning Started'
                sh 'java -version'
                echo 'Docker Image Scanning Started'
            }
        }
        stage(' Docker push to Docker Hub') {
           steps {
              script {
                 withCredentials([string(credentialsId: 'dockerhubCred', variable: 'dockerhubCred')]){
                 sh 'docker login docker.io -u navjyotb -p ${dockerhubCred}'
                 echo "Push Docker Image to DockerHub : In Progress"
                 sh 'docker push navjyotb/yatra-ms:latest'
                 echo "Push Docker Image to DockerHub : In Progress"
                 sh 'whoami'
                 }
              }
            }
        }
        stage(' Docker Image Push to Amazon ECR') {
           steps {
              script {
                 withDockerRegistry([credentialsId:'ecr:ap-south-1:ecr-credentials', url:"https://756937382593.dkr.ecr.ap-south-1.amazonaws.com"]){
                 sh """
                 echo "List the docker images present in local"
                 docker images
                 echo "Tagging the Docker Image: In Progress"
                 docker tag yatra-ms:latest 756937382593.dkr.ecr.ap-south-1.amazonaws.com/yatra-ms:latest
                 echo "Tagging the Docker Image: Completed"
                 echo "Push Docker Image to ECR : In Progress"
                 docker push 756937382593.dkr.ecr.ap-south-1.amazonaws.com/yatra-ms:latest
                 echo "Push Docker Image to ECR : Completed"
                 """
                 }
              }
           }
        }
        stage('Upload Docker Images to Nexus') {
            steps {
                script{
                    withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
                    sh 'docker login http://3.108.66.31:8085/repository/yatra/ -u admin -p ${PASSWORD}'
                    echo "push docker image to nexus : in progress"
                    sh 'docker tag yatra-ms 3.108.66.31:8085/yatra:latest'
                    sh 'docker push 3.108.66.31:8085/yatra'
                    echo "push docker image to nexus : completed"
                    }
                }


            }
            }
            }
            }












